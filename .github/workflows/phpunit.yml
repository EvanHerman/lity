---
name: PHPUnit Tests

on: push

jobs:
  phpunit:
    name: PHPUnit - (PHP ${{ matrix.php }} - WP ${{ matrix.wp }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [7.4, 8.0]
        wp: ['5.4', 'latest']

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - uses: php-actions/composer@v5

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php }}'
          extensions: mysql, zip
          coverage: none
          tools: composer, wp-cli

      - name: Install Tests - WordPress ${{ env.WP_VERSION }}
        run: .dev/scripts/install-wp-tests.sh wordpress_test root password 127.0.0.1 ${{ env.WP_VERSION }}
        env:
          WP_VERSION: ${{ matrix.wp }}

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Use Composer cache
        uses: actions/cache@master
        with:
          path: ${{ steps['composer-cache'].outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer Install
        run: |
          if [ "${{ env.WP_VERSION }}" == '5.4' ]; then
            composer require phpunit/phpunit:^7.5.20 -W --dev
          fi
          sudo composer install
        env:
          WP_VERSION: ${{ matrix.wp }}

      - name: Run unit tests
        run: yarn test:php
